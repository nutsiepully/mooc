install.packages("~/work/code/courses/mooc/r_resources/topicmodels_0.1-12.zip", repos = NULL)
library("topicmodels", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("topicmodels")
install.packages("topicmodels")
library("topicmodels", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
set
set.seed
set.seed(1321)
topics <- 2
seed <- 1231231
help set
help(set)
??set
library('topicmodels')
library("topicmodels")
topicmodels
tm
LDA
help(LDA)
pwd
pwd()
ch
cd
cwd
chdir
DirSource
Dirsource
col <- Corpus(DirSource("~/work//code/courses/mooc/r_resources/text", encoding="UTF-8"))
library("tm", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
col <- Corpus(DirSource("~/work//code/courses/mooc/r_resources/text", encoding="UTF-8"))
pwd
col <- Corpus(DirSource("/Users/pulkit/work/code/courses/mooc/r_resources", encoding="UTF-8"))
col <- Corpus(DirSource("/Users/pulkit/work/code/courses/mooc/r_resources/texts", encoding="UTF-8"))
col
tdm <- TermDocumentMatrix(col, control = list(removePunctuation = TRUE, stopwords = TRUE))
dtm <- DocumentTermMatrix(col, control = list(weighting =
function(x)
weightTf(x), removePunctuation = TRUE,
stopwords = TRUE))
training <- LDA(dtm, k = topics, control = list(seed = SEED))
training <- LDA(dtm, k = topics, control = list(seed = seed))
training
wordAssignMat <- as.matrix(training@wordassignments)
wordAssignMat
as
wordAssignMat
docTermMat <- as.matrix(dtm)
docTermMat
topicTermWeights <- posterior(training)$terms
topicTermWeights
wordAssignMat
docTopicWeights <- posterior(training)$topics
docTopicWeights
help(posterior)
dtm
tdm
help(set)
help(set.seed)
help(DirSource)
help(Corpus)
col
posts
help(TermDocumentMatrix)
tdm
as.matrix(dtm)
as.matrix(tdm)
training
training
type(training)
typeof(training)
typeof(4)
typeof(4.)
typeof(dtm)
typeof(tdm)
help(LDA)
training.Dim
training.Dim()
training@Dim
training@call
training@wordassignments
as.matrix(training@wordassignments)
help posterior
help(posterior)
help(posterior)
posterior(training)
??posterior
posterior(training)$terms
posterior(training)$topics
posts = read.csv
posts = read.csv("~/work/code/courses/mooc/fsf-coursera/fantasysf-003_posts_all.csv")
posts
typeof(posts)
help(read.csv)
posts.names
posts$names
posts <- read.csv("~/work/code/courses/mooc/fsf-coursera/fantasysf-003_posts_all.csv")
posts <- read.csv("~/work/code/courses/mooc/fsf-coursera/fantasysf-003_posts_all.csv");
posts$names
posts(parent_id = 'post-36')
posts(parent_id = 'post-36')
posts[parent_id = 'post-36']
posts[$parent_id = 'post-36']
posts[parent_id = 'post-36']
help(read.csv)
d
data.frame(x = 1, y = 1:10, posts)
data.frame(x = 1, posts)
posts[1, 1]
View(posts)
View(posts)
posts[601, 3]
name.first <- c('Pulkit', 'Hello')
name.first
name
name.first
top.5.scores <- c(12, 23, 34)
top
top.5
top.5.scores
posts[1:3,]
posts
posts[1:5, 1:3]
posts[1:10, 1:3]
posts[1:2]
posts[1:2,]
help
tdm <- TermDocumentMatrix(posts, control = list(removePunctuation = TRUE, stopwords = TRUE))
class(posts)
col <- Corpus(DataframeSource(posts))
tdm <- TermDocumentMatrix(col, control = list(removePunctuation = TRUE, stopwords = TRUE))
dtm <- DocumentTermMatrix(col, control = list(weighting =
function(x)
weightTf(x), removePunctuation = TRUE,
stopwords = TRUE))
help(TermDocumentMatrix)
inspect(tdm[1:5, 1:5])
inspect(dtm1:5, 1:5])
inspect(dtm[1:5, 1:5])
training <- LDA(dtm, k = topics, control = list(seed = seed))
wordAssignMat <- as.matrix(training@wordassignments)
class(wordAssignMat)
wordAssignMat(1:10, 1:10)
wordAssignMat[1:10, 1:10]
wordAssignMat[1:10, 1:40]
wordAssignMat[wordAssignMat > 1]
help posterior
help(posterior)
??posterior
wordAssignMat
topics
savehistory("~/work/code/courses/mooc/rhistory_topicmodeling_1.Rhistory")
